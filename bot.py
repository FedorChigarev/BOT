import os
import logging
import asyncio
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command
from datetime import datetime, timedelta

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")  # –£–∫–∞–∂–∏—Ç–µ ID —á–∞—Ç–∞ –≤ .env

if not TOKEN:
    raise ValueError("TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ .env")

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_activity = {}

# –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
bad_words = ["—Ö—É–π", "–º–∞—Ç2", "–º–∞—Ç3"]


### üìå –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã ###
@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –ü–∏—à–∏ –º–Ω–µ –∏ —É—á–∞—Å—Ç–≤—É–π –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ!")


@dp.message(Command("–±–æ—Ç_–≥—Ä–∞—Ñ–∏–∫_—É–±–æ—Ä–∫–∏"))
async def cmd_schedule(message: Message):
    await message.answer("üßπ –ì—Ä–∞—Ñ–∏–∫ —É–±–æ—Ä–∫–∏: –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, –°—Ä–µ–¥–∞, –ü—è—Ç–Ω–∏—Ü–∞ –≤ 9:00.")


@dp.message(Command("–±–æ—Ç_–ø–æ–¥—Ä—è–¥—á–∏–∫–∏"))
async def cmd_contractors(message: Message):
    await message.answer("üë∑ –°–ø–∏—Å–æ–∫ –ø–æ–¥—Ä—è–¥—á–∏–∫–æ–≤:\n1. –ü–æ–¥—Ä—è–¥—á–∏–∫ 1\n2. –ü–æ–¥—Ä—è–¥—á–∏–∫ 2\n3. –ü–æ–¥—Ä—è–¥—á–∏–∫ 3")


@dp.message(Command("–±–æ—Ç_—Å–æ—Å—Ç–∞–≤_—Ç–∞—Ä–∏—Ñ–∞"))
async def cmd_tariff(message: Message):
    await message.answer("üìä –°–æ—Å—Ç–∞–≤ —Ç–∞—Ä–∏—Ñ–∞:\n1. –í–æ–¥–∞\n2. –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ\n3. –£–±–æ—Ä–∫–∞")


@dp.message(Command("–±–æ—Ç_–≥–æ—Ä—è—á–∏–µ_—Ç–µ–ª–µ—Ñ–æ–Ω—ã"))
async def cmd_hotlines(message: Message):
    await message.answer("‚òé –ì–æ—Ä—è—á–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã:\n1. –ü–æ–∂–∞—Ä–Ω—ã–µ ‚Äî 101\n2. –ü–æ–ª–∏—Ü–∏—è ‚Äî 102\n3. –ú–ß–° ‚Äî 112")


@dp.message(Command("–±–æ—Ç_–∞–≤–∞—Ä–∏–π–∫–∞"))
async def cmd_emergency(message: Message):
    await message.answer("üö® –ê–≤–∞—Ä–∏–π–∫–∞: –¢–µ–ª–µ—Ñ–æ–Ω –∞–≤–∞—Ä–∏–π–Ω–æ–π —Å–ª—É–∂–±—ã ‚Äî 112.")


@dp.message(Command("–ø–æ–º–æ—â—å"))
async def cmd_help(message: Message):
    await message.answer(
        "üìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/–±–æ—Ç_–≥—Ä–∞—Ñ–∏–∫_—É–±–æ—Ä–∫–∏\n"
        "/–±–æ—Ç_–ø–æ–¥—Ä—è–¥—á–∏–∫–∏\n"
        "/–±–æ—Ç_—Å–æ—Å—Ç–∞–≤_—Ç–∞—Ä–∏—Ñ–∞\n"
        "/–±–æ—Ç_–≥–æ—Ä—è—á–∏–µ_—Ç–µ–ª–µ—Ñ–æ–Ω—ã\n"
        "/–±–æ—Ç_–∞–≤–∞—Ä–∏–π–∫–∞\n"
        "\nüí° –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ '–±–æ—Ç, –∫—Ç–æ —Å–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π?'"
    )


### üìå –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ###
@dp.message()
async def track_activity(message: Message):
    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.first_name
    text = message.text.lower()

    # üìå –ï—Å–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å—Ç—å "–±–æ—Ç", —Ä–µ–∞–≥–∏—Ä—É–µ–º
    if "–±–æ—Ç" in text:
        await handle_bot_mention(message)
        return

    # üìå –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –º–∞—Ç—ã
    if any(word in text for word in bad_words):
        await message.delete()
        await message.answer(f"‚ùå @{username}, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –º–∞—Ç—ã! –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–∞ 1 –¥–µ–Ω—å.")

        until_date = datetime.now() + timedelta(days=1)
        try:
            await bot.ban_chat_member(message.chat.id, user_id, until_date=until_date)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–∞–Ω–µ: {e}")
        return

    # üìå –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id in user_activity:
        user_activity[user_id]["count"] += 1
    else:
        user_activity[user_id] = {"count": 1, "username": username}


### üìå –û—Ç–≤–µ—Ç –Ω–∞ "–±–æ—Ç, –∫—Ç–æ —Å–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π?" ###
async def handle_bot_mention(message: Message):
    text = message.text.lower()

    if "–∫—Ç–æ —Å–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π" in text:
        if not user_activity:
            await message.answer("üìä –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.")
            return

        sorted_users = sorted(user_activity.items(), key=lambda x: x[1]["count"], reverse=True)
        top_users = sorted_users[:3]

        report = "üìä –°–∞–º—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:\n"
        for i, (user_id, data) in enumerate(top_users, start=1):
            report += f"{i}. @{data['username']} ‚Äî {data['count']} —Å–æ–æ–±—â–µ–Ω–∏–π\n"

        winner = top_users[0][1]['username']
        report += f"\nüéâ @{winner} ‚Äî –ª–∏–¥–µ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–µ–≥–æ–¥–Ω—è!"
        await message.answer(report)

    else:
        await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –ù–∞–ø–∏—à–∏ '–±–æ—Ç, –∫—Ç–æ —Å–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π?' —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ç–æ–ø-3!")


### üìå –ê–≤—Ç–æ–æ—Ç—á–µ—Ç –≤ 21:00 ###
async def daily_report():
    while True:
        now = datetime.now()
        target_time = now.replace(hour=21, minute=0, second=0, microsecond=0)

        if now > target_time:
            target_time += timedelta(days=1)

        sleep_seconds = (target_time - now).total_seconds()
        logging.info(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –¥–æ 21:00: {sleep_seconds} —Å–µ–∫—É–Ω–¥")
        await asyncio.sleep(sleep_seconds)

        if user_activity:
            sorted_users = sorted(user_activity.items(), key=lambda x: x[1]["count"], reverse=True)
            top_users = sorted_users[:3]

            report = "üìä –ò—Ç–æ–≥–∏ –¥–Ω—è:\n"
            for i, (user_id, data) in enumerate(top_users, start=1):
                report += f"{i}. @{data['username']} ‚Äî {data['count']} —Å–æ–æ–±—â–µ–Ω–∏–π\n"

            winner = top_users[0][1]['username']
            report += f"\nüéä –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º @{winner} ‚Äî —Ç—ã —Å–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π —Å–µ–≥–æ–¥–Ω—è!"

            if CHAT_ID:
                await bot.send_message(CHAT_ID, report)

        user_activity.clear()


### üìå –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ###
async def main():
    asyncio.create_task(daily_report())
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
